{"ast":null,"code":"var _jsxFileName = \"/home/prokopis/Desktop/WebAppProject/frontend/frontend/src/components/Network.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport axios from 'axios';\nimport { Redirect } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport { useLocation } from \"react-router-dom\";\nimport Settings from './Settings.js';\nimport Plot from './Plot.js';\nimport { Route, PrivateRoute } from 'react-router-dom';\nimport { withRouter } from 'react-router-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport './Network.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Network(props) {\n  _s();\n\n  const [user_search, setuser_search] = useState(\"\");\n\n  const handleSearchValueChange = e => setSearchValue(e.target.value);\n\n  function Search() {\n    alert(\"mpika edw\");\n  }\n\n  if (props.location.state == null) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 11\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Plot, {\n        name: \"Network\",\n        id: props.location.state.id,\n        email: props.location.state.email_address\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"My Network\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n_s(Network, \"exGyr1nvM63GlC1k53aLmSj+i9s=\");\n\n_c = Network;\n\nvar _c;\n\n$RefreshReg$(_c, \"Network\");","map":{"version":3,"sources":["/home/prokopis/Desktop/WebAppProject/frontend/frontend/src/components/Network.js"],"names":["React","axios","Redirect","Link","useLocation","Settings","Plot","Route","PrivateRoute","withRouter","BrowserRouter","Router","Network","props","user_search","setuser_search","useState","handleSearchValueChange","e","setSearchValue","target","value","Search","alert","location","state","id","email_address"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,QAAuB,cAAvB;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,SAAQC,WAAR,QAA0B,kBAA1B;AACA,OAAOC,QAAP,MAAqB,eAArB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAAQC,KAAR,EAAcC,YAAd,QAAiC,kBAAjC;AACA,SAAQC,UAAR,QAAyB,kBAAzB;AACA,SAAQC,aAAa,IAAIC,MAAzB,QAAsC,kBAAtC;AACA,OAAO,eAAP;;AACA,eAAe,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAAA;;AACtC,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCC,QAAQ,CAAC,EAAD,CAA9C;;AACA,QAAMC,uBAAuB,GAAIC,CAAD,IAAOC,cAAc,CAACD,CAAC,CAACE,MAAF,CAASC,KAAV,CAArD;;AACA,WAASC,MAAT,GAAiB;AAChBC,IAAAA,KAAK,CAAC,WAAD,CAAL;AACA;;AACD,MAAGV,KAAK,CAACW,QAAN,CAAeC,KAAf,IAAsB,IAAzB,EAA8B;AAC7B,wBAAQ,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YAAR;AACA,GAFD,MAGI;AACH,wBACI;AAAA,8BACC,QAAC,IAAD;AAAM,QAAA,IAAI,EAAE,SAAZ;AAAuB,QAAA,EAAE,EAAEZ,KAAK,CAACW,QAAN,CAAeC,KAAf,CAAqBC,EAAhD;AAAoD,QAAA,KAAK,EAAEb,KAAK,CAACW,QAAN,CAAeC,KAAf,CAAqBE;AAAhF;AAAA;AAAA;AAAA;AAAA,cADD,eAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFD;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAMA;AACD;;GAjBuBf,O;;KAAAA,O","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport {Redirect} from 'react-router';\nimport {Link} from 'react-router-dom';\nimport {useLocation} from \"react-router-dom\";\nimport Settings from './Settings.js'\nimport Plot from './Plot.js'\nimport {Route,PrivateRoute} from 'react-router-dom';\nimport {withRouter} from 'react-router-dom';\nimport {BrowserRouter as Router} from 'react-router-dom';\nimport './Network.css'\nexport default function Network(props) {\n\tconst [user_search, setuser_search] = useState(\"\");\n\tconst handleSearchValueChange = (e) => setSearchValue(e.target.value);\n\tfunction Search(){\n\t\talert(\"mpika edw\")\n\t}\n\tif(props.location.state==null){\n\t\treturn (<Redirect to='/'/>);\n\t}\n\telse{\n\t\treturn (\n   \t\t\t<div>\n   \t\t\t\t<Plot name={\"Network\"} id={props.location.state.id} email={props.location.state.email_address}/>\n   \t\t\t\t<h1>My Network</h1>\n   \t\t\t</div>\n   \t\t);\n\t}\n}"]},"metadata":{},"sourceType":"module"}