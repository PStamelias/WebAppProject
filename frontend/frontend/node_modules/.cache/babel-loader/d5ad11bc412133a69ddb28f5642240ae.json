{"ast":null,"code":"var _jsxFileName = \"/home/prokopis/Desktop/WebAppProject/frontend/frontend/src/components/Network.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport axios from 'axios';\nimport { Redirect } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport { useLocation } from \"react-router-dom\";\nimport Settings from './Settings.js';\nimport Plot from './Plot.js';\nimport { Route, PrivateRoute } from 'react-router-dom';\nimport { withRouter } from 'react-router-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport './Network.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Network(props) {\n  _s();\n\n  const [user_search, setuser_search] = useState(\"\");\n\n  const handleSearchValueChange = e => setuser_search(e.target.value);\n\n  const [email_address, setemal_addres] = useState(\"\");\n  const [id, setid] = useState(-1);\n\n  const handleemail_addressChange = e => setemal_addres(e.target.value);\n\n  const handleidChange = e => setid(e.target.value);\n\n  function Search() {\n    alert(props.location.state.id);\n    alert(props.location.state.Email);\n    handleemail_addressChange(props.location.state.Email);\n    handleidChange(props.location.state.id);\n    alert(id);\n    alert(email_address);\n  }\n\n  if (props.location.state == null) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Plot, {\n        name: \"Network\",\n        id: props.location.state.id,\n        email: props.location.state.email_address\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"My Network\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: Search,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Search UserEmail:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"search_name\",\n          name: \"search_name\",\n          defaultValue: user_search,\n          onChange: handleSearchValueChange,\n          size: \"61\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          class: \"a\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 8\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n_s(Network, \"wgkL0+FmTxaHN69LPtVXXDKcGJc=\");\n\n_c = Network;\n\nvar _c;\n\n$RefreshReg$(_c, \"Network\");","map":{"version":3,"sources":["/home/prokopis/Desktop/WebAppProject/frontend/frontend/src/components/Network.js"],"names":["React","useEffect","useState","axios","Redirect","Link","useLocation","Settings","Plot","Route","PrivateRoute","withRouter","BrowserRouter","Router","Network","props","user_search","setuser_search","handleSearchValueChange","e","target","value","email_address","setemal_addres","id","setid","handleemail_addressChange","handleidChange","Search","alert","location","state","Email"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from 'axios';\nimport {Redirect} from 'react-router';\nimport {Link} from 'react-router-dom';\nimport {useLocation} from \"react-router-dom\";\nimport Settings from './Settings.js'\nimport Plot from './Plot.js'\nimport {Route,PrivateRoute} from 'react-router-dom';\nimport {withRouter} from 'react-router-dom';\nimport {BrowserRouter as Router} from 'react-router-dom';\nimport './Network.css'\nexport default function Network(props) {\n\tconst [user_search, setuser_search] = useState(\"\");\n\tconst handleSearchValueChange = (e) => setuser_search(e.target.value);\n\tconst [email_address,setemal_addres]=useState(\"\");\n\tconst [id,setid]=useState(-1);\n\tconst handleemail_addressChange = (e) => setemal_addres(e.target.value);\n\tconst handleidChange = (e) => setid(e.target.value);\n\tfunction Search(){\n\t\talert(props.location.state.id)\n\t\talert(props.location.state.Email)\n\t\thandleemail_addressChange(props.location.state.Email)\n\t\thandleidChange(props.location.state.id)\n\t\talert(id)\n\t\talert(email_address)\n\t}\n\tif(props.location.state==null){\n\t\treturn (<Redirect to='/'/>);\n\t}\n\telse{\n\t\treturn (\n   \t\t\t<div>\n   \t\t\t\t<Plot name={\"Network\"} id={props.location.state.id} email={props.location.state.email_address}/>\n   \t\t\t\t<h1>My Network</h1>\n\t  \t\t\t<form onSubmit={Search}>\n\t\t\t    <label>Search UserEmail:</label>\n\t\t\t    <input type=\"text\"  id=\"search_name\" name=\"search_name\" defaultValue={user_search}  onChange={handleSearchValueChange} size=\"61\"/>\n\t\t\t    <button class=\"a\">Submit</button>\n\t\t\t    </form>\n   \t\t\t</div>\n   \t\t);\n\t}\n}"]},"metadata":{},"sourceType":"module"}